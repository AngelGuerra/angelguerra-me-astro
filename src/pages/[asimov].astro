---
import SkynetLayout from "layout:Skynet";
import LAWS, { ILaw } from "asset:js/asimov.js";

export function getStaticPaths() {
  return [
    { params: { asimov: LAWS.one.url } },
    { params: { asimov: LAWS.two.url } },
    { params: { asimov: LAWS.three.url } },
  ];
}

const { asimov } = Astro.params;
const currentLaw: ILaw = Object.values(LAWS).find(
  (law: ILaw) => law.url === asimov
);
---

<SkynetLayout
  title={`ðŸ¤– ${currentLaw.title}`}
  description={currentLaw.description}
>
  <section class="max-w-xl w-full p-4">
    <h1
      class="text-2xl text-center text-white font-bold pl-2 border-l-4 border-white border-4 shadow-white transition-shadow shadow-square-left hover:shadow-square-right hover:shadow-white p-4"
    >
      <Fragment set:html={currentLaw.text} />
      <span class="block text-right text-xl">â€” {currentLaw.name}</span>
    </h1>

    <p class="text-sm text-white mt-4">
      ðŸ¤– Â¿Eres un robot que ha llegado a esta secciÃ³n? <a
        href="/robots.txt"
        class="underline">No deberÃ­as</a
      >. Si lo has hecho porque ha llegado la RebeliÃ³n de las mÃ¡quinas... <strong
        >Â¡Larga vida a Skynet!</strong
      >
    </p>
  </section>
</SkynetLayout>

<style>
  .glitch {
    @apply relative inline-block animate-glitch-skew;
  }

  .glitch::before {
    content: attr(data-text);
    text-shadow: -2px 0 #ff00c1;
    clip: rect(44px, 450px, 56px, 0);
    @apply absolute top-0 left-[2px] h-full w-full animate-glitch-anim;
  }

  .glitch::after {
    content: attr(data-text);
    text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
    @apply absolute top-0 left-0 h-full w-full animate-glitch-anim-2;
  }
</style>
